/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.tls.liferaylms.mail.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.tls.liferaylms.mail.model.AuditReceiverMail;
import com.tls.liferaylms.mail.model.AuditReceiverMailModel;
import com.tls.liferaylms.mail.model.AuditReceiverMailSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the AuditReceiverMail service. Represents a row in the &quot;lmsmail_AuditReceiverMail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.tls.liferaylms.mail.model.AuditReceiverMailModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AuditReceiverMailImpl}.
 * </p>
 *
 * @author je03042
 * @see AuditReceiverMailImpl
 * @see com.tls.liferaylms.mail.model.AuditReceiverMail
 * @see com.tls.liferaylms.mail.model.AuditReceiverMailModel
 * @generated
 */
@JSON(strict = true)
public class AuditReceiverMailModelImpl extends BaseModelImpl<AuditReceiverMail>
	implements AuditReceiverMailModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a audit receiver mail model instance should use the {@link com.tls.liferaylms.mail.model.AuditReceiverMail} interface instead.
	 */
	public static final String TABLE_NAME = "lmsmail_AuditReceiverMail";
	public static final Object[][] TABLE_COLUMNS = {
			{ "auditReceiverMailId", Types.BIGINT },
			{ "auditSendMailsId", Types.BIGINT },
			{ "to_", Types.VARCHAR },
			{ "status", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table lmsmail_AuditReceiverMail (auditReceiverMailId LONG not null primary key,auditSendMailsId LONG,to_ VARCHAR(75) null,status INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table lmsmail_AuditReceiverMail";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.tls.liferaylms.mail.model.AuditReceiverMail"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.tls.liferaylms.mail.model.AuditReceiverMail"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.tls.liferaylms.mail.model.AuditReceiverMail"),
			true);
	public static long AUDITSENDMAILSID_COLUMN_BITMASK = 1L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static AuditReceiverMail toModel(AuditReceiverMailSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		AuditReceiverMail model = new AuditReceiverMailImpl();

		model.setAuditReceiverMailId(soapModel.getAuditReceiverMailId());
		model.setAuditSendMailsId(soapModel.getAuditSendMailsId());
		model.setTo(soapModel.getTo());
		model.setStatus(soapModel.getStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<AuditReceiverMail> toModels(
		AuditReceiverMailSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<AuditReceiverMail> models = new ArrayList<AuditReceiverMail>(soapModels.length);

		for (AuditReceiverMailSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.tls.liferaylms.mail.model.AuditReceiverMail"));

	public AuditReceiverMailModelImpl() {
	}

	public long getPrimaryKey() {
		return _auditReceiverMailId;
	}

	public void setPrimaryKey(long primaryKey) {
		setAuditReceiverMailId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_auditReceiverMailId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return AuditReceiverMail.class;
	}

	public String getModelClassName() {
		return AuditReceiverMail.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("auditReceiverMailId", getAuditReceiverMailId());
		attributes.put("auditSendMailsId", getAuditSendMailsId());
		attributes.put("to", getTo());
		attributes.put("status", getStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long auditReceiverMailId = (Long)attributes.get("auditReceiverMailId");

		if (auditReceiverMailId != null) {
			setAuditReceiverMailId(auditReceiverMailId);
		}

		Long auditSendMailsId = (Long)attributes.get("auditSendMailsId");

		if (auditSendMailsId != null) {
			setAuditSendMailsId(auditSendMailsId);
		}

		String to = (String)attributes.get("to");

		if (to != null) {
			setTo(to);
		}

		Integer status = (Integer)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@JSON
	public long getAuditReceiverMailId() {
		return _auditReceiverMailId;
	}

	public void setAuditReceiverMailId(long auditReceiverMailId) {
		_auditReceiverMailId = auditReceiverMailId;
	}

	@JSON
	public long getAuditSendMailsId() {
		return _auditSendMailsId;
	}

	public void setAuditSendMailsId(long auditSendMailsId) {
		_columnBitmask |= AUDITSENDMAILSID_COLUMN_BITMASK;

		if (!_setOriginalAuditSendMailsId) {
			_setOriginalAuditSendMailsId = true;

			_originalAuditSendMailsId = _auditSendMailsId;
		}

		_auditSendMailsId = auditSendMailsId;
	}

	public long getOriginalAuditSendMailsId() {
		return _originalAuditSendMailsId;
	}

	@JSON
	public String getTo() {
		if (_to == null) {
			return StringPool.BLANK;
		}
		else {
			return _to;
		}
	}

	public void setTo(String to) {
		_to = to;
	}

	@JSON
	public Integer getStatus() {
		return _status;
	}

	public void setStatus(Integer status) {
		_status = status;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			AuditReceiverMail.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AuditReceiverMail toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (AuditReceiverMail)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		AuditReceiverMailImpl auditReceiverMailImpl = new AuditReceiverMailImpl();

		auditReceiverMailImpl.setAuditReceiverMailId(getAuditReceiverMailId());
		auditReceiverMailImpl.setAuditSendMailsId(getAuditSendMailsId());
		auditReceiverMailImpl.setTo(getTo());
		auditReceiverMailImpl.setStatus(getStatus());

		auditReceiverMailImpl.resetOriginalValues();

		return auditReceiverMailImpl;
	}

	public int compareTo(AuditReceiverMail auditReceiverMail) {
		long primaryKey = auditReceiverMail.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		AuditReceiverMail auditReceiverMail = null;

		try {
			auditReceiverMail = (AuditReceiverMail)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = auditReceiverMail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AuditReceiverMailModelImpl auditReceiverMailModelImpl = this;

		auditReceiverMailModelImpl._originalAuditSendMailsId = auditReceiverMailModelImpl._auditSendMailsId;

		auditReceiverMailModelImpl._setOriginalAuditSendMailsId = false;

		auditReceiverMailModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<AuditReceiverMail> toCacheModel() {
		AuditReceiverMailCacheModel auditReceiverMailCacheModel = new AuditReceiverMailCacheModel();

		auditReceiverMailCacheModel.auditReceiverMailId = getAuditReceiverMailId();

		auditReceiverMailCacheModel.auditSendMailsId = getAuditSendMailsId();

		auditReceiverMailCacheModel.to = getTo();

		String to = auditReceiverMailCacheModel.to;

		if ((to != null) && (to.length() == 0)) {
			auditReceiverMailCacheModel.to = null;
		}

		auditReceiverMailCacheModel.status = getStatus();

		return auditReceiverMailCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{auditReceiverMailId=");
		sb.append(getAuditReceiverMailId());
		sb.append(", auditSendMailsId=");
		sb.append(getAuditSendMailsId());
		sb.append(", to=");
		sb.append(getTo());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.tls.liferaylms.mail.model.AuditReceiverMail");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>auditReceiverMailId</column-name><column-value><![CDATA[");
		sb.append(getAuditReceiverMailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>auditSendMailsId</column-name><column-value><![CDATA[");
		sb.append(getAuditSendMailsId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>to</column-name><column-value><![CDATA[");
		sb.append(getTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = AuditReceiverMail.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			AuditReceiverMail.class
		};
	private long _auditReceiverMailId;
	private long _auditSendMailsId;
	private long _originalAuditSendMailsId;
	private boolean _setOriginalAuditSendMailsId;
	private String _to;
	private Integer _status;
	private long _columnBitmask;
	private AuditReceiverMail _escapedModelProxy;
}